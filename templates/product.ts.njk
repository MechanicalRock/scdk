import { Construct, Reference } from "@aws-cdk/core";
import { CfnCloudFormationProvisionedProduct } from "@aws-cdk/aws-servicecatalog";

{%- for Artifact in ProvisioningArtifacts %}
{%- if Artifact.Parameters | length %}
interface V{{ major(Artifact.Name) }}Props {
{%- for p in Artifact.Parameters %}
    {%- if p.ParameterDescription %}
    /**
     * {{ p.ParameterName }}: {{ p.ParameterDescription }}
     */
    {%- endif %}
    {{ p.ParameterName }}{% if not p.ParameterRequired %}?{% endif %}: string;
{%- endfor %}
}
{%- endif %}

export class V{{ major(Artifact.Name) }} extends Construct {

    {%- for o in Artifact.Outputs %}
    {%- if o.OutputDescription %}
    /**
     * {{ o.OutputName }}: {{ o.OutputDescription }}
     */
    {%- endif %}
    readonly {{ o.OutputName }}: Reference;
    {%- endfor %}

    constructor(scope: Construct, id: string{% if Artifact.Parameters | length %}, props: V{{ major(Artifact.Name) }}Props{% endif %}) {
        super(scope, id);

        const provisioningParameters = Object.entries(props).map(([key, value]) => ({ key, value }));

        const resource = new CfnCloudFormationProvisionedProduct(this, "Resource", {
            productName: "{{ Name }}",
            provisioningArtifactName: "{{ Artifact.Name }}",
            provisioningParameters,
        });

        {%- for Output in Artifact.Outputs %}
        this.{{ Output.OutputName }} = resource.getAtt("Outputs.{{ Output.OutputName }}");
        {%- endfor %}
    }
}
{%- endfor %}
